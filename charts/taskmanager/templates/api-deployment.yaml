apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "taskmanager.fullname" . }}-api
  labels:
    {{- include "taskmanager.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "taskmanager.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        {{- include "taskmanager.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      containers:
        - name: api
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "taskmanager.fullname" . }}-secrets
                  key: jwt-secret
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "taskmanager.fullname" . }}-secrets
                  key: mongo-user
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "taskmanager.fullname" . }}-secrets
                  key: mongo-password
            - name: MONGO_URI
              value: "mongodb://$(MONGO_USER):$(MONGO_PASSWORD)@{{ include "taskmanager.fullname" . }}-mongodb:{{ .Values.mongodb.service.port }}/{{ .Values.api.env.mongoDatabase }}?authSource=admin"
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
      restartPolicy: Always