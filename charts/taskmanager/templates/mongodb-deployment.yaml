apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: mongodb
spec:
  replicas: {{ .Values.mongodb.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: mongodb
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: mongodb
    spec:
      containers:
        - name: mongodb
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          env:
            - name: MONGO_INITDB_DATABASE
              value: {{ .Values.mongodb.env.database }}
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: taskmanager-secrets
                  key: mongo-user
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: taskmanager-secrets
                  key: mongo-password
          ports:
            - name: mongodb
              containerPort: {{ .Values.mongodb.service.port }}
              protocol: TCP
          {{- if .Values.mongodb.persistence.enabled }}
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
          {{- end }}
      restartPolicy: Always
      {{- if .Values.mongodb.persistence.enabled }}
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-data
      {{- end }}